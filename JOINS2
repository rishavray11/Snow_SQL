-- USE ROLE 
USE ROLE ACCOUNTADMIN;

-- USE WAREHOUSE 
USE WAREHOUSE COMPUTE_WH;

-- CREATING A DATABASE 
CREATE DATABASE IF NOT EXISTS JOINS_IN_SQL;

-- USE DATABASE 
USE DATABASE JOINS_IN_SQL;

-- CREATE SCHEMA FOR THE TODAYS CLASS
CREATE SCHEMA IF NOT EXISTS JOINS_SCHEMA;

-- USE SCHEMA 
USE SCHEMA JOINS_SCHEMA;

-- Departments Table
CREATE TABLE Departments (
    dept_id INT PRIMARY KEY,
    dept_name VARCHAR(100),
    location VARCHAR(100)
);

INSERT INTO Departments VALUES
(1, 'HR', 'Mumbai'),
(2, 'Engineering', 'Bangalore'),
(3, 'Finance', 'Delhi');

-- Employees Table
CREATE TABLE Employees (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    dept_id INT,
    manager_id INT,
    salary INT,
    hire_date DATE,
    FOREIGN KEY (dept_id) REFERENCES Departments(dept_id)
);

INSERT INTO Employees VALUES
(101, 'Alice', 1, NULL, 60000, '2018-01-15'),
(102, 'Bob', 2, 101, 80000, '2019-03-20'),
(103, 'Charlie', 2, 102, 70000, '2020-07-10'),
(104, 'David', 3, 101, 75000, '2021-02-18'),
(105, 'Eva', 3, 104, 68000, '2022-05-22');

-- Projects Table
CREATE TABLE Projects (
    proj_id INT PRIMARY KEY,
    proj_name VARCHAR(100),
    emp_id INT,
    budget INT,
    start_date DATE,
    FOREIGN KEY (emp_id) REFERENCES Employees(emp_id)
);

INSERT INTO Projects VALUES
(201, 'Payroll System', 101, 500000, '2023-01-01'),
(202, 'AI Model', 102, 700000, '2023-02-01'),
(203, 'Dashboard', 103, 400000, '2023-03-15'),
(204, 'Audit System', 104, 300000, '2023-04-10'),
(205, 'Investment Portal', 105, 450000, '2023-05-01');



-- INTERVIEW 
-- CREATE 
CREATE TABLE Weather (
    id INT PRIMARY KEY,
    record_date DATE,
    temperature INT
);

INSERT INTO Weather (id, record_date, temperature) VALUES
(1, '2023-03-01', 20),
(2, '2023-03-02', 25),
(3, '2023-03-03', 22),
(4, '2023-03-04', 26),
(5, '2023-03-05', 24);

select *
from Employees;

select *
from Projects;

select *
from Departments;
/*WAQTD THE DEPARTMENT NAME AND NUMBER OF EMPLOYEE IN EACH DEPARTMNET SHOW ONLY THOSE DEPARTMENTS WHERE THE AVG SALARY IS ABOVE 70000. ORDER THE RESULT BY EMPLOYEE COUNT DESC*/

SELECT D.DEPT_NAME,COUNT(EMP_ID),ROUND(AVG(SALARY),2)
FROM Departments AS D
INNER JOIN EMPLOYEES AS E 
ON D.DEPT_ID=E.DEPT_ID
GROUP BY DEPT_NAME
HAVING AVG(SALARY)>70000;




--------------------------------------------------------------------
select E.EMP_NAME,E.SALARY,E.HIRE_DATE
from Employees as E 
inner join Departments as D
on E.DEPT_ID=D.DEPT_ID
where E.HIRE_DATE > '2020-01-01' and D.Location='Bangalore';


--Show project name, employee name, their department name, and budget.


--List all projects started after March 1, 2023, along with project name, employee name, department, and budget (only for Bangalore-based departments).



SELECT
    p.proj_name,
    E.EMP_NAME,D.DEPT_NAME,
    P.BUDGET
from 
    Employees as E 
    inner join Departments as D
    on E.DEPT_ID=D.DEPT_ID
    inner join projects as P
    on E.EMP_ID= P.EMP_ID
where P.START_DATE >'2023-03-01' 
    and 
    D.LOCATION='Bangalore';

--Write a SQL query to get the employee name, project they are assigned onto department the employee is from. And the total project budget given for their all the projects.

SELECT E.EMP_NAME,P.PROJ_NAME,D.LOCATION,SUM(P.BUDGET)AS TOTAL_BUDGET
FROM
    Employees as E 
    inner join Departments as D
    on E.DEPT_ID=D.DEPT_ID
    inner join projects as P
    on E.EMP_ID= P.EMP_ID
    GROUP BY E.EMP_NAME,P.PROJ_NAME,D.LOCATION;
